[{"/home/john/1/redTetris/src/client/src/stories/Button.stories.js":"1","/home/john/1/redTetris/src/client/src/stories/Page.stories.js":"2","/home/john/1/redTetris/src/client/src/stories/Header.stories.js":"3","/home/john/1/redTetris/src/client/src/stories/Header.js":"4","/home/john/1/redTetris/src/client/src/stories/Page.js":"5","/home/john/1/redTetris/src/client/src/stories/Button.js":"6","/home/john/1/redTetris/src/client/src/stories/Atoms/CaseBoolColor/CaseBoolColor.stories.js":"7","/home/john/1/redTetris/src/client/src/Components/Atoms/CaseBoolColor/CaseBoolColor.jsx":"8","/home/john/1/redTetris/src/client/src/Components/Atoms/CaseColor/CaseColor.stories.js":"9","/home/john/1/redTetris/src/client/src/Components/Atoms/CaseColor/CaseColor.jsx":"10","/home/john/1/redTetris/src/client/src/Components/Molecules/TetrisRow/TetrisRow.stories.js":"11","/home/john/1/redTetris/src/client/src/Components/Molecules/TetrisRow/TetrisRow.jsx":"12","/home/john/1/redTetris/src/client/src/Components/Organisms/Board/BoardWithoutGameLoop.jsx":"13","/home/john/1/redTetris/src/client/src/Components/Organisms/ViewBoardAdv/ViewBoardAdv.stories.js":"14","/home/john/1/redTetris/src/client/src/Components/Organisms/ViewBoardAdv/ViewBoardAdv.jsx":"15","/home/john/1/redTetris/src/client/src/Components/Molecules/TetriRowAdv/TetriRowAdv.jsx":"16","/home/john/1/redTetris/src/client/src/Components/Organisms/Board/BoardWithoutGameLoop.stories.js":"17","/home/john/1/redTetris/src/client/src/Components/Pages/Game/GameRun.stories.js":"18","/home/john/1/redTetris/src/client/src/Components/Pages/Game/GameRun.jsx":"19","/home/john/1/redTetris/src/client/src/Components/Organisms/Board/Board.jsx":"20","/home/john/1/redTetris/src/client/src/Components/Organisms/ViewBoard/ViewBoard.jsx":"21","/home/john/1/redTetris/src/client/src/Components/hook/useGameLoop.jsx":"22","/home/john/1/redTetris/src/client/src/logic/isLoose.js":"23","/home/john/1/redTetris/src/client/src/logic/tetriLogic.js":"24","/home/john/1/redTetris/src/client/src/redux/actions/Game.js":"25","/home/john/1/redTetris/src/client/src/redux/Constant/Tetri.js":"26","/home/john/1/redTetris/src/client/src/redux/Constant/SocketIOProtocol.js":"27","/home/john/1/redTetris/src/client/src/Components/hook/useActionUser.jsx":"28","/home/john/1/redTetris/src/client/src/Components/hook/useInterval.jsx":"29","/home/john/1/redTetris/src/client/src/logic/checkFunction.js":"30","/home/john/1/redTetris/src/client/src/utils/cmpArray.js":"31","/home/john/1/redTetris/src/client/src/redux/Constant/Constant.js":"32","/home/john/1/redTetris/src/client/src/Components/hook/useKeyPress.jsx":"33","/home/john/1/redTetris/src/client/src/logic/addPos.js":"34","/home/john/1/redTetris/src/client/src/Components/Organisms/ViewBoard/ViewBoard.stories.js":"35","/home/john/1/redTetris/src/client/src/Components/Pages/Game/GameResult/GameResult.stories.js":"36","/home/john/1/redTetris/src/client/src/Components/Pages/Game/GameResult/GameResult.jsx":"37","/home/john/1/redTetris/src/client/src/Components/Atoms/Layout/CenterPage.jsx":"38"},{"size":619,"mtime":1615140500520,"results":"39","hashOfConfig":"40"},{"size":424,"mtime":1615140500520,"results":"41","hashOfConfig":"40"},{"size":325,"mtime":1615140500520,"results":"42","hashOfConfig":"40"},{"size":1463,"mtime":1615140500520,"results":"43","hashOfConfig":"40"},{"size":2521,"mtime":1615140500520,"results":"44","hashOfConfig":"40"},{"size":1101,"mtime":1615140500516,"results":"45","hashOfConfig":"40"},{"size":250,"mtime":1615142751566,"results":"46","hashOfConfig":"40"},{"size":660,"mtime":1615223935298,"results":"47","hashOfConfig":"40"},{"size":572,"mtime":1615143851921,"results":"48","hashOfConfig":"40"},{"size":1632,"mtime":1615131645657,"results":"49","hashOfConfig":"40"},{"size":182,"mtime":1615149328283,"results":"50","hashOfConfig":"40"},{"size":316,"mtime":1615149310635,"results":"51","hashOfConfig":"40"},{"size":698,"mtime":1615216084151,"results":"52","hashOfConfig":"40"},{"size":354,"mtime":1615215197841,"results":"53","hashOfConfig":"40"},{"size":732,"mtime":1615223811557,"results":"54","hashOfConfig":"40"},{"size":341,"mtime":1615223795461,"results":"55","hashOfConfig":"40"},{"size":307,"mtime":1615214367413,"results":"56","hashOfConfig":"40"},{"size":2998,"mtime":1615483870428,"results":"57","hashOfConfig":"40"},{"size":2602,"mtime":1615483736003,"results":"58","hashOfConfig":"40"},{"size":307,"mtime":1615149987758,"results":"59","hashOfConfig":"40"},{"size":729,"mtime":1615228104093,"results":"60","hashOfConfig":"40"},{"size":5002,"mtime":1614984981739,"results":"61","hashOfConfig":"40"},{"size":950,"mtime":1614870300068,"results":"62","hashOfConfig":"40"},{"size":2676,"mtime":1614605573788,"results":"63","hashOfConfig":"40"},{"size":672,"mtime":1613665306425,"results":"64","hashOfConfig":"40"},{"size":274,"mtime":1614472333017,"results":"65","hashOfConfig":"40"},{"size":1075,"mtime":1615411745786,"results":"66","hashOfConfig":"40"},{"size":985,"mtime":1614549825142,"results":"67","hashOfConfig":"40"},{"size":509,"mtime":1612717249925,"results":"68","hashOfConfig":"40"},{"size":782,"mtime":1614684921896,"results":"69","hashOfConfig":"40"},{"size":351,"mtime":1614690081377,"results":"70","hashOfConfig":"40"},{"size":355,"mtime":1613162081056,"results":"71","hashOfConfig":"40"},{"size":707,"mtime":1614549812382,"results":"72","hashOfConfig":"40"},{"size":128,"mtime":1614605009387,"results":"73","hashOfConfig":"40"},{"size":222,"mtime":1615227826580,"results":"74","hashOfConfig":"40"},{"size":169,"mtime":1615466349882,"results":"75","hashOfConfig":"40"},{"size":923,"mtime":1615483652346,"results":"76","hashOfConfig":"40"},{"size":970,"mtime":1613478492493,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},"1qss526",{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"81"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"81"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"81"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"81"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"81"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"81"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"81"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"81"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"81"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"81"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"81"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"81"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"81"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"81"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"81"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/john/1/redTetris/src/client/src/stories/Button.stories.js",["171"],"import React from 'react';\n\nimport { Button } from './Button';\n\nexport default {\n  title: 'Example/Button',\n  component: Button,\n  argTypes: {\n    backgroundColor: { control: 'color' },\n  },\n};\n\nconst Template = (args) => <Button {...args} />;\n\nexport const Primary = Template.bind({});\nPrimary.args = {\n  primary: true,\n  label: 'Button',\n};\n\nexport const Secondary = Template.bind({});\nSecondary.args = {\n  label: 'Button',\n};\n\nexport const Large = Template.bind({});\nLarge.args = {\n  size: 'large',\n  label: 'Button',\n};\n\nexport const Small = Template.bind({});\nSmall.args = {\n  size: 'small',\n  label: 'Button',\n};\n",["172","173"],"/home/john/1/redTetris/src/client/src/stories/Page.stories.js",["174"],"import React from 'react';\n\nimport { Page } from './Page';\nimport * as HeaderStories from './Header.stories';\n\nexport default {\n  title: 'Example/Page',\n  component: Page,\n};\n\nconst Template = (args) => <Page {...args} />;\n\nexport const LoggedIn = Template.bind({});\nLoggedIn.args = {\n  ...HeaderStories.LoggedIn.args,\n};\n\nexport const LoggedOut = Template.bind({});\nLoggedOut.args = {\n  ...HeaderStories.LoggedOut.args,\n};\n","/home/john/1/redTetris/src/client/src/stories/Header.stories.js",["175"],"import React from 'react';\n\nimport { Header } from './Header';\n\nexport default {\n  title: 'Example/Header',\n  component: Header,\n};\n\nconst Template = (args) => <Header {...args} />;\n\nexport const LoggedIn = Template.bind({});\nLoggedIn.args = {\n  user: {},\n};\n\nexport const LoggedOut = Template.bind({});\nLoggedOut.args = {};\n","/home/john/1/redTetris/src/client/src/stories/Header.js",[],"/home/john/1/redTetris/src/client/src/stories/Page.js",[],"/home/john/1/redTetris/src/client/src/stories/Button.js",[],"/home/john/1/redTetris/src/client/src/stories/Atoms/CaseBoolColor/CaseBoolColor.stories.js",["176"],"import React from 'react';\nimport CaseBoolColor from './../../../Components/Atoms/CaseBoolColor/CaseBoolColor';\n// value\n\nlet title = 'Case Bool Color'\n\nexport const byDefault = () => <CaseBoolColor value={1} />;\n\nexport default {\n    title: title\n};","/home/john/1/redTetris/src/client/src/Components/Atoms/CaseBoolColor/CaseBoolColor.jsx",["177"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '5px !important',\n        height : '5px',\n    },\n\n    trueColor: {\n        backgroundColor: 'orange'\n    },\n    falseColor: {\n        backgroundColor: 'white'\n    }\n    \n})\n\nconst CaseBoolColor = ({caseValue}) => {\n    const classes = useStyles();\n\n    return (\n        <div key={'casouille'}\n              className={clsx(classes.root, (caseValue !== 0) ? classes.trueColor : classes.falseColor)}>\n        </div>\n    )\n}\n\nexport default CaseBoolColor\n","/home/john/1/redTetris/src/client/src/Components/Atoms/CaseColor/CaseColor.stories.js",["178"],"import React from 'react';\nimport CaseColor from './CaseColor';\n// value\n\nconst Template = (args) => <CaseColor {...args} />;\n\nlet title = 'Case Color'\n\nexport const ByDefault = () => <CaseColor caseValue={7} />;\nexport const Primary = () => <CaseColor caseValue={6} />;\n\nexport const WithTemplate = Template.bind({});\nWithTemplate.args = {caseValue : 5}\n\n/*\nexport const Tertiary = Template.bind({});\nTertiary.args = { ...Primary.args, label: '📚📕📈🤓' };\n*/\n\n//export const TestArg = () => <CaseColor [caseValue]=\"test\" />\n\nexport default {\n    title: title\n};\n","/home/john/1/redTetris/src/client/src/Components/Atoms/CaseColor/CaseColor.jsx",[],"/home/john/1/redTetris/src/client/src/Components/Molecules/TetrisRow/TetrisRow.stories.js",["179"],"import React from 'react';\nimport TetrisRow from './TetrisRow';\n\nexport const ByDefault = () => <TetrisRow  row={[0,1,2,3,4,5,6,7,0,1]}/>\n\nexport default {\n    title : 'Tetris row'\n}","/home/john/1/redTetris/src/client/src/Components/Molecules/TetrisRow/TetrisRow.jsx",["180"],"import React, {useEffect} from 'react'\nimport CaseColor from './../../Atoms/CaseColor/CaseColor';\n\nconst TetrisRow = ({row}) => {\n    return (\n        <>\n        {\n            row.map((elem, indexElem) => <CaseColor caseValue={elem} indexCase={indexElem} />)\n        } \n        </>\n    )\n}\n\nexport default TetrisRow\n","/home/john/1/redTetris/src/client/src/Components/Organisms/Board/BoardWithoutGameLoop.jsx",[],"/home/john/1/redTetris/src/client/src/Components/Organisms/ViewBoardAdv/ViewBoardAdv.stories.js",["181"],"import React from 'react';\nimport ViewBoardAdv from './ViewBoardAdv';\n\n\nlet tab = Array(20).fill([]).map(() => Array(10).fill(0))  \n\ntab[17] = [...Array(8).fill(2), 0, 0];\ntab[18] = [...Array(9).fill(2), 0];\ntab[19] = Array(10).fill(2);\n\nexport const ByDefault = () => <ViewBoardAdv currentBoard={tab} />;\n\nexport default {\n    title: 'Game Board Adv'\n};","/home/john/1/redTetris/src/client/src/Components/Organisms/ViewBoardAdv/ViewBoardAdv.jsx",[],"/home/john/1/redTetris/src/client/src/Components/Molecules/TetriRowAdv/TetriRowAdv.jsx",[],"/home/john/1/redTetris/src/client/src/Components/Organisms/Board/BoardWithoutGameLoop.stories.js",["182"],"import React from 'react';\nimport BoardWithoutGameLoop from './BoardWithoutGameLoop';\n// value\n\nlet tab = Array(20).fill([]).map(() => Array(10).fill(0))  \n\ntab[10] = Array(10).fill(2);\n\nexport const ByDefault = () => <BoardWithoutGameLoop currentBoard={tab} />;\n\nexport default {\n    title: 'Game Board'\n};","/home/john/1/redTetris/src/client/src/Components/Pages/Game/GameRun.stories.js",["183"],"/home/john/1/redTetris/src/client/src/Components/Pages/Game/GameRun.jsx",["184"],"/home/john/1/redTetris/src/client/src/Components/Organisms/Board/Board.jsx",[],"/home/john/1/redTetris/src/client/src/Components/Organisms/ViewBoard/ViewBoard.jsx",["185"],"import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TetrisRow from '../../Molecules/TetrisRow/TetrisRow';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        backgroundColor : '#333',\n        border : '1px',\n        borderColor : '#666',\n    },\n    flexRow:{\n        display: 'flex',\n        flexDirection: 'row'\n    }\n})\n\nconst ViewBoard = ({currentBoard}) => {\n  const styles = useStyles();\n\n  return (\n    <div >    \n      {currentBoard.map((row, indexRow) => (\n        <div key={\"rowrow\" + indexRow} className={styles.flexRow}>\n          <TetrisRow row={row}></TetrisRow>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ViewBoard;  ","/home/john/1/redTetris/src/client/src/Components/hook/useGameLoop.jsx",["186","187","188"],"import { useEffect } from 'react'\nimport _ from \"lodash\" // Import the entire lodash library\nimport useInterval from './useInterval';\nimport useActionUser from './../hook/useActionUser';\n\nimport { mergeTetriOnMap, checkValidPushTetri, checkAndPush, checkAndPushSpace} from './../../logic/tetriLogic';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { updateTmpMap, tetriRotation, updateTetriminosPos} from './../../redux/actions/Game';\nimport {SOCKET_GET_NEXT_TETRIMINOS, SOCKET_USER_DEAD, SOCKET_UPDATE_USER_TETRI_BOARD} from './../../redux/Constant/SocketIOProtocol';\nimport {END_TURN_PUT} from './../../redux/Constant/Tetri';\n\nimport {isLoose} from './../../logic/isLoose';\n\nconst useGameLoop = () => {\n    let [action] = useActionUser();\n\n    const state = useSelector(state => state.game); //nbLineBlock\n    const room = useSelector(state => state.user.room);\n    const alive = useSelector(state => state.user.alive);\n    const tetriList = useSelector(state => state.game.tetriList);\n    const dispatch = useDispatch();\n\n    const fallAlgo = () => {\n        if (alive === false)\n            return (1);\n        console.log('fall algo ... call');\n        if (room.state !== 'RUNING_GAME')\n            return (0);\n\n        if (!tetriList[0] || !tetriList[0].shape) {\n            console.log('Invalid tetriminos.');\n            console.log(state.currTetriminos);\n            return 0;\n        }\n\n        let cpMap = _.cloneDeep(state.currMap);\n        let pos = { ...state.posTetriminos };\n        pos.y += 1;\n\n        if (!checkValidPushTetri(state.currMap, state.tetriList[0].shape[state.currRotation], pos)) {\n\n            // check loose Array(20).map(() => Array(10).fill(0)) 0 === loose\n            // si contact line 1 && (pas de contact line 0 && tetriminos case present on line 0)\n            if(isLoose(state.currMap, state.tetriList[0].shape[state.currRotation], {x : pos.x, y : pos.y - 1}))\n            {\n                dispatch({type : SOCKET_USER_DEAD});\n                return 0;   \n            }\n            else {\n            dispatch({type : END_TURN_PUT, payload : {newMap : cpMap}})\n            dispatch({type : SOCKET_UPDATE_USER_TETRI_BOARD}); // maybe  data nn - 1\n            // get next tetriminos\n            if (tetriList.length < 4)\n                dispatch({type : SOCKET_GET_NEXT_TETRIMINOS});\n            return 1;\n            }\n        }\n        \n        else {        \n            dispatch(updateTetriminosPos(pos)); //update tetriminos pos\n        }\n        \n        /*\n                //2) try insert tetriminos\n                    //2.1) succes we update the map\n                    //2.2) fail  we put tetriminos on the map\n            */\n    }\n\n    useEffect(() => {\n\n\n        if (alive === false)\n            return (1);\n\n        let tmpPos;\n        let cpMap;\n        let ret;\n        let currTetriminos = tetriList[0];\n\n        if (room.state !== 'RUNING_GAME')\n            return 0;\n\n        if (!tetriList[0] || !tetriList[0].shape) {\n            console.log('invalid tetriminos');\n            return 0;\n        } \n\n        switch (action) {\n            case 'rotate':\n                ret = checkValidPushTetri(state.currMap, currTetriminos.shape[(state.currRotation + 1) % currTetriminos.shape.length], state.posTetriminos);\n                if (ret)\n                    dispatch(tetriRotation((state.currRotation + 1) % currTetriminos.shape.length))\n                break;\n            case 'right':\n                tmpPos = { ...state.posTetriminos };\n                cpMap = _.cloneDeep(state.currMap);\n                tmpPos.x += 1;\n                ret = checkAndPush(cpMap, currTetriminos.shape[state.currRotation], tmpPos);\n                if (ret)\n                    dispatch(updateTetriminosPos(tmpPos)); \n                break;\n            case 'left':\n                console.log('------>>>>>>')\n                tmpPos = { ...state.posTetriminos };\n                cpMap = _.cloneDeep(state.currMap);\n                tmpPos.x -= 1;\n                ret = checkAndPush(cpMap, currTetriminos.shape[state.currRotation], tmpPos);\n                if (ret)\n                    dispatch(updateTetriminosPos(tmpPos)); \n                break;\n            case 'down':\n                tmpPos = { ...state.posTetriminos };\n                cpMap = _.cloneDeep(state.currMap);\n                tmpPos.y += 1;\n                ret = checkAndPush(cpMap, currTetriminos.shape[state.currRotation], tmpPos);\n                if (ret)\n                    dispatch(updateTetriminosPos(tmpPos)); \n                break;\n            case 'space':\n                tmpPos = { ...state.posTetriminos };\n                cpMap = _.cloneDeep(state.currMap);\n\n                checkAndPushSpace(cpMap, currTetriminos.shape[state.currRotation], tmpPos);\n                dispatch(updateTetriminosPos(tmpPos)); \n\n                break;\n            default:\n            break;\n        }\n\n    }, [action]);\n\n    useInterval(fallAlgo, 500);\n}\n\nexport default useGameLoop\n","/home/john/1/redTetris/src/client/src/logic/isLoose.js",[],"/home/john/1/redTetris/src/client/src/logic/tetriLogic.js",[],"/home/john/1/redTetris/src/client/src/redux/actions/Game.js",[],"/home/john/1/redTetris/src/client/src/redux/Constant/Tetri.js",[],"/home/john/1/redTetris/src/client/src/redux/Constant/SocketIOProtocol.js",[],"/home/john/1/redTetris/src/client/src/Components/hook/useActionUser.jsx",["189"],"import {useState, useEffect} from 'react'\nimport useKeyPress from './useKeyPress';\n\nconst useActionUser = () => {\n    const [keyPress] = useKeyPress();\n    const [action, setAction] = useState('');\n    \n    useEffect(() => {\n        \n    switch(keyPress){\n            case 'ArrowRight':\n                setAction('right');\n            break;\n            case 'ArrowLeft':\n                setAction('left');\n            break;\n            case 'ArrowUp':\n                setAction('rotate');\n            break;\n            case 'ArrowDown':\n                setAction('down');\n            break;\n            case 'Space':\n                setAction('space')\n            break;\n            default:\n                console.log('action keypress : ' + keyPress);\n                \n                if (action !== '')\n                    setAction('')\n                console.log(keyPress);\n            break;\n        }\n    }, [keyPress])\n\n    return ([action])\n}\n\nexport default useActionUser\n","/home/john/1/redTetris/src/client/src/Components/hook/useInterval.jsx",["190","191"],"import React, { useState, useEffect, useRef } from 'react';\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\nexport default useInterval;","/home/john/1/redTetris/src/client/src/logic/checkFunction.js",[],"/home/john/1/redTetris/src/client/src/utils/cmpArray.js",[],"/home/john/1/redTetris/src/client/src/redux/Constant/Constant.js",[],"/home/john/1/redTetris/src/client/src/Components/hook/useKeyPress.jsx",["192"],"import React,{useEffect, useState} from 'react'\n\n\nconst useKeyPress = () => {\n    const [keyPress, setKeyPress] = useState('');\n\n    // If pressed key is our target key then set to true\n\n  const downHandler = (event) => {\n      setKeyPress(event.code);\n   }\n\n  const upHandler = () => {\n      console.log('up handler');\n      setKeyPress('');\n  };\n\n    useEffect(() => {\n        window.addEventListener('keydown', downHandler);\n        window.addEventListener('keyup', upHandler);\n    \n        return () => {\n          window.removeEventListener('keydown', downHandler);\n          window.removeEventListener('keyup', upHandler);\n        };\n    }, [])\n\n    return ([keyPress]);\n}\n\nexport default useKeyPress\n","/home/john/1/redTetris/src/client/src/logic/addPos.js",[],"/home/john/1/redTetris/src/client/src/Components/Organisms/ViewBoard/ViewBoard.stories.js",["193"],"import React from 'react';\nimport ViewBoard from './ViewBoard';\n\nexport const ByDefault = () =>\n    <ViewBoard currentBoard = {[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]]} />\n\nexport default {\n    title : 'Next tetriminos'\n}","/home/john/1/redTetris/src/client/src/Components/Pages/Game/GameResult/GameResult.stories.js",["194"],"/home/john/1/redTetris/src/client/src/Components/Pages/Game/GameResult/GameResult.jsx",[],"/home/john/1/redTetris/src/client/src/Components/Atoms/Layout/CenterPage.jsx",[],{"ruleId":"195","severity":1,"message":"196","line":5,"column":1,"nodeType":"197","endLine":11,"endColumn":3},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"195","severity":1,"message":"196","line":6,"column":1,"nodeType":"197","endLine":9,"endColumn":3},{"ruleId":"195","severity":1,"message":"196","line":5,"column":1,"nodeType":"197","endLine":8,"endColumn":3},{"ruleId":"195","severity":1,"message":"196","line":9,"column":1,"nodeType":"197","endLine":11,"endColumn":3},{"ruleId":"202","severity":1,"message":"203","line":4,"column":8,"nodeType":"204","messageId":"205","endLine":4,"endColumn":12},{"ruleId":"195","severity":1,"message":"196","line":22,"column":1,"nodeType":"197","endLine":24,"endColumn":3},{"ruleId":"195","severity":1,"message":"196","line":6,"column":1,"nodeType":"197","endLine":8,"endColumn":2},{"ruleId":"202","severity":1,"message":"206","line":1,"column":16,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"196","line":13,"column":1,"nodeType":"197","endLine":15,"endColumn":3},{"ruleId":"195","severity":1,"message":"196","line":11,"column":1,"nodeType":"197","endLine":13,"endColumn":3},{"ruleId":"195","severity":1,"message":"196","line":115,"column":1,"nodeType":"197","endLine":117,"endColumn":2},{"ruleId":"202","severity":1,"message":"207","line":12,"column":10,"nodeType":"204","messageId":"205","endLine":12,"endColumn":28},{"ruleId":"202","severity":1,"message":"203","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":12},{"ruleId":"202","severity":1,"message":"208","line":6,"column":10,"nodeType":"204","messageId":"205","endLine":6,"endColumn":25},{"ruleId":"202","severity":1,"message":"209","line":9,"column":10,"nodeType":"204","messageId":"205","endLine":9,"endColumn":22},{"ruleId":"210","severity":1,"message":"211","line":133,"column":8,"nodeType":"212","endLine":133,"endColumn":16,"suggestions":"213"},{"ruleId":"210","severity":1,"message":"214","line":34,"column":8,"nodeType":"212","endLine":34,"endColumn":18,"suggestions":"215"},{"ruleId":"202","severity":1,"message":"216","line":1,"column":8,"nodeType":"204","messageId":"205","endLine":1,"endColumn":13},{"ruleId":"202","severity":1,"message":"217","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"202","severity":1,"message":"216","line":1,"column":8,"nodeType":"204","messageId":"205","endLine":1,"endColumn":13},{"ruleId":"195","severity":1,"message":"196","line":7,"column":1,"nodeType":"197","endLine":9,"endColumn":2},{"ruleId":"195","severity":1,"message":"196","line":9,"column":1,"nodeType":"197","endLine":11,"endColumn":2},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'requirePropFactory' is defined but never used.","'mergeTetriOnMap' is defined but never used.","'updateTmpMap' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'alive', 'dispatch', 'room.state', 'state.currMap', 'state.currRotation', 'state.posTetriminos', and 'tetriList'. Either include them or remove the dependency array.","ArrayExpression",["220"],"React Hook useEffect has a missing dependency: 'action'. Either include it or remove the dependency array.",["221"],"'React' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},"Update the dependencies array to be: [action, alive, dispatch, room.state, state.currMap, state.currRotation, state.posTetriminos, tetriList]",{"range":"226","text":"227"},"Update the dependencies array to be: [action, keyPress]",{"range":"228","text":"229"},[4928,4936],"[action, alive, dispatch, room.state, state.currMap, state.currRotation, state.posTetriminos, tetriList]",[918,928],"[action, keyPress]"]